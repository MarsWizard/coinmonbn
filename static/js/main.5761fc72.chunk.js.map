{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pako","require","App","props","prices","symbols","state","count","future_contracts","contract_code","symbol","openPrices","sendMessage","bind","subscribe","updatePrice","sendMessageSwap","this","url","URL","search","URLSearchParams","fetch","then","res","json","data","setState","contacts","catch","console","log","_this","arrayBuffer","compressedData","text","inflate","to","msg","JSON","parse","ping","stringify","pong","tick","m","ch","match","close","open","period","message","refWebSocket","Set","contract","add","swap_contract_code","sub","ws_swap","map","value","index","toFixed","onMessage","handleData","debug","onOpen","handleOpen","ref","Websocket","handleSwapReceive","handleSwapOpen","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5761fc72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Websocket from 'react-websocket';\r\nconst pako = require('pako');\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var prices = {};\r\n    var openPrices = {};\r\n    var future_contracts = [{\r\n      contract_code: \"ETH_CW\", \r\n      symbol: \"ETH\"\r\n    }, {\r\n      contract_code: \"ETH_NW\", \r\n      symbol: \"ETH\"\r\n    }, {\r\n      contract_code: \"ETH_CQ\", \r\n      symbol: \"ETH\"\r\n    }, {\r\n      contract_code: \"ETH_NQ\", \r\n      symbol: \"ETH\"\r\n    }, {\r\n      contract_code: \"BTC_CW\", \r\n      symbol: \"BTC\"\r\n    }, {\r\n      contract_code: \"BTC_NW\", \r\n      symbol: \"BTC\"\r\n    }, {\r\n      contract_code: \"BTC_CQ\", \r\n      symbol: \"BTC\"\r\n    }, {\r\n      contract_code: \"BTC_NQ\", \r\n      symbol: \"BTC\"\r\n    }, {\r\n      contract_code: \"LTC_CW\", \r\n      symbol: \"LTC\"\r\n    }, {\r\n      contract_code: \"LTC_NW\", \r\n      symbol: \"LTC\"\r\n    }, {\r\n      contract_code: \"LTC_CQ\", \r\n      symbol: \"LTC\"\r\n    }, {\r\n      contract_code: \"LTC_NQ\", \r\n      symbol: \"LTC\"\r\n    }];\r\n    var symbols = ['ETH', 'BTC', 'LTC'];\r\n    for(let symbol of symbols){\r\n      prices[symbol] = null;\r\n    }\r\n    this.state = {\r\n      count: 90, \r\n      prices, \r\n      symbols, \r\n      future_contracts, \r\n      openPrices, \r\n    };\r\n\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    this.subscribe = this.subscribe.bind(this);\r\n    this.updatePrice = this.updatePrice.bind(this);\r\n    this.sendMessageSwap = this.sendMessageSwap.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    for(let symbol of this.state.symbols){\r\n      var url = new URL('https://api.hbdm.com/api/v1/contract_contract_info');\r\n      url.search = new URLSearchParams({'symbol': symbol});\r\n      fetch(url)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ contacts: data })\r\n      })\r\n      .catch(console.log)\r\n    }\r\n  }\r\n\r\n  handleData(data) {\r\n    var sendMessage = this.sendMessage;\r\n    var _this = this;\r\n    data.arrayBuffer().then(function(compressedData){\r\n      let text = pako.inflate(compressedData, {\r\n        to: 'string'\r\n      });\r\n      let msg = JSON.parse(text);\r\n      if (msg.ping) {\r\n        sendMessage(JSON.stringify({\r\n          pong: msg.ping\r\n        }));\r\n      } else if (msg.tick) {\r\n        var m = msg.ch.match(/market\\.([\\w_]+)\\.kline\\..*/);\r\n        if(m){\r\n        var symbol = m[1];\r\n          // console.log(symbol);\r\n          _this.updatePrice(symbol, msg.tick);\r\n        }\r\n          // console.log(msg);\r\n          // handle(msg);\r\n      } else {\r\n          // console.log(text);\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePrice(symbol, tick){\r\n    var prices = this.state.prices;\r\n    prices[symbol] = tick.close;\r\n    var openPrices = this.state.openPrices;\r\n    openPrices[symbol] = tick.open;\r\n    this.setState({prices});\r\n  }\r\n\r\n  subscribe(){\r\n    for (let symbol of this.state.symbols) {\r\n      for (let period of ['CW', 'NW', 'CQ', 'NQ']){\r\n        this.sendMessage(JSON.stringify({\r\n            \"sub\": `market.${symbol}_${period}.kline.1day`,\r\n            \"id\": `${symbol}_${period}`\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOpen(){\r\n    this.subscribe();\r\n  }\r\n\r\n  sendMessage(message){\r\n    this.refWebSocket.sendMessage(message);\r\n  }\r\n\r\n  handleSwapOpen(){\r\n    var symbols = new Set();\r\n    for(let contract of this.state.future_contracts){\r\n      symbols.add(contract.symbol);\r\n    }\r\n\r\n    for(let symbol of symbols){\r\n      var swap_contract_code = `${symbol}-USD`;\r\n      var sub = `market.${swap_contract_code}.kline.1day`;\r\n      this.sendMessageSwap(JSON.stringify({\r\n        sub: sub\r\n      }));\r\n    }\r\n  }\r\n\r\n  sendMessageSwap(message){\r\n    this.ws_swap.sendMessage(message);\r\n  }\r\n\r\n  handleSwapReceive(data){\r\n    var _this = this;\r\n    data.arrayBuffer().then(function(compressedData){\r\n      let text = pako.inflate(compressedData, {\r\n        to: 'string'\r\n      });\r\n      let msg = JSON.parse(text);\r\n      if (msg.ping) {\r\n        _this.sendMessageSwap(JSON.stringify({\r\n          pong: msg.ping\r\n        }));\r\n      } else if (msg.tick) {\r\n        var m = msg.ch.match(/market\\.([\\w]+)\\-([\\w+]+)\\.kline\\..*/);\r\n        if(m){\r\n          var symbol = m[1];\r\n          console.log(symbol);\r\n          _this.updatePrice(symbol, msg.tick);\r\n        }\r\n          console.log(msg);\r\n          // handle(msg);\r\n      } else {\r\n          console.log(text);\r\n      }\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    var symbols = this.state.symbols;\r\n    var future_contracts = this.state.future_contracts;\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Symbol</th>\r\n              <th>LastPrice</th>\r\n              <th>Spot</th>\r\n              <th>Spread Rate</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {future_contracts.map((value, index) => {\r\n              return <tr key={value.contract_code}>\r\n                <td>{value.contract_code}</td>\r\n                <td>{this.state.prices[value.contract_code]} ({(this.state.prices[value.contract_code] / this.state.openPrices[value.contract_code] * 100 - 100).toFixed(2)})</td>\r\n                <td>{this.state.prices[value.symbol]}</td>\r\n                <td>{(this.state.prices[value.contract_code] / this.state.prices[value.symbol]).toFixed(4)}</td>\r\n              </tr>\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <Websocket url='wss://api.btcgateway.pro/ws'\r\n            onMessage={this.handleData.bind(this)} debug={true}\r\n            onOpen={this.handleOpen.bind(this)} \r\n            ref={Websocket => {\r\n              this.refWebSocket = Websocket;\r\n            }}/>\r\n        <Websocket url='wss://api.btcgateway.pro/swap-ws'\r\n            onMessage={this.handleSwapReceive.bind(this)} debug={true}\r\n            onOpen={this.handleSwapOpen.bind(this)} \r\n            ref={Websocket => {\r\n              this.ws_swap = Websocket;\r\n            }}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}