{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pako","require","App","props","prices","symbols","state","count","future_contracts","contract_code","symbol","sendMessage","bind","subscribe","updatePrice","sendMessageSwap","this","url","URL","search","URLSearchParams","fetch","then","res","json","data","setState","contacts","catch","console","log","_this","arrayBuffer","compressedData","text","inflate","to","msg","JSON","parse","ping","stringify","pong","tick","m","ch","match","close","price","period","message","refWebSocket","Set","contract","add","swap_contract_code","sub","ws_swap","map","value","index","toFixed","onMessage","handleData","debug","onOpen","handleOpen","ref","Websocket","handleSwapReceive","handleSwapOpen","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b2e0d84.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Websocket from 'react-websocket';\nconst pako = require('pako');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    var prices = {};\n    var future_contracts = [{\n      contract_code: \"ETH_CW\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_NW\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_CQ\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_NQ\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"BTC_CW\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_NW\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_CQ\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_NQ\", \n      symbol: \"BTC\"\n    }];\n    var symbols = ['ETH', 'BTC'];\n    for(let symbol of symbols){\n      prices[symbol] = null;\n    }\n    this.state = {\n      count: 90, \n      prices, \n      symbols, \n      future_contracts, \n    };\n\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.updatePrice = this.updatePrice.bind(this);\n    this.sendMessageSwap = this.sendMessageSwap.bind(this);\n  }\n\n  componentDidMount() {\n    for(let symbol of this.state.symbols){\n      var url = new URL('https://api.hbdm.com/api/v1/contract_contract_info');\n      url.search = new URLSearchParams({'symbol': symbol});\n      fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ contacts: data })\n      })\n      .catch(console.log)\n    }\n  }\n\n  handleData(data) {\n    var sendMessage = this.sendMessage;\n    var _this = this;\n    data.arrayBuffer().then(function(compressedData){\n      let text = pako.inflate(compressedData, {\n        to: 'string'\n      });\n      let msg = JSON.parse(text);\n      if (msg.ping) {\n        sendMessage(JSON.stringify({\n          pong: msg.ping\n        }));\n      } else if (msg.tick) {\n        var m = msg.ch.match(/market\\.([\\w_]+)\\.kline\\.1min/);\n        if(m){\n        var symbol = m[1];\n          // console.log(symbol);\n          _this.updatePrice(symbol, msg.tick.close);\n        }\n          // console.log(msg);\n          // handle(msg);\n      } else {\n          // console.log(text);\n      }\n    });\n  }\n\n  updatePrice(symbol, price){\n    var prices = this.state.prices;\n    prices[symbol] = price;\n    this.setState({prices});\n  }\n\n  subscribe(){\n    for (let symbol of this.state.symbols) {\n      for (let period of ['CW', 'NW', 'CQ', 'NQ']){\n        this.sendMessage(JSON.stringify({\n            \"sub\": `market.${symbol}_${period}.kline.1min`,\n            \"id\": `${symbol}_${period}`\n        }));\n      }\n    }\n  }\n\n  handleOpen(){\n    this.subscribe();\n  }\n\n  sendMessage(message){\n    this.refWebSocket.sendMessage(message);\n  }\n\n  handleSwapOpen(){\n    var symbols = new Set();\n    for(let contract of this.state.future_contracts){\n      symbols.add(contract.symbol);\n    }\n\n    for(let symbol of symbols){\n      var swap_contract_code = `${symbol}-USD`;\n      var sub = `market.${swap_contract_code}.kline.1min`;\n      this.sendMessageSwap(JSON.stringify({\n        sub: sub\n      }));\n    }\n  }\n\n  sendMessageSwap(message){\n    this.ws_swap.sendMessage(message);\n  }\n\n  handleSwapReceive(data){\n    var _this = this;\n    data.arrayBuffer().then(function(compressedData){\n      let text = pako.inflate(compressedData, {\n        to: 'string'\n      });\n      let msg = JSON.parse(text);\n      if (msg.ping) {\n        _this.sendMessageSwap(JSON.stringify({\n          pong: msg.ping\n        }));\n      } else if (msg.tick) {\n        var m = msg.ch.match(/market\\.([\\w]+)\\-([\\w+]+)\\.kline\\.1min/);\n        if(m){\n          var symbol = m[1];\n          console.log(symbol);\n          _this.updatePrice(symbol, msg.tick.close);\n        }\n          console.log(msg);\n          // handle(msg);\n      } else {\n          console.log(text);\n      }\n    });\n  }\n  \n  render() {\n    var symbols = this.state.symbols;\n    var future_contracts = this.state.future_contracts;\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>LastPrice</th>\n              <th>Spot</th>\n              <th>Spread Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {future_contracts.map((value, index) => {\n              return <tr key={value.contract_code}>\n                <td>{value.contract_code}</td>\n                <td>{this.state.prices[value.contract_code]}</td>\n                <td>{this.state.prices[value.symbol]}</td>\n                <td>{(this.state.prices[value.contract_code] / this.state.prices[value.symbol]).toFixed(4)}</td>\n              </tr>\n            })}\n          </tbody>\n        </table>\n        <Websocket url='wss://api.btcgateway.pro/ws'\n            onMessage={this.handleData.bind(this)} debug={true}\n            onOpen={this.handleOpen.bind(this)} \n            ref={Websocket => {\n              this.refWebSocket = Websocket;\n            }}/>\n        <Websocket url='wss://api.btcgateway.pro/swap-ws'\n            onMessage={this.handleSwapReceive.bind(this)} debug={true}\n            onOpen={this.handleSwapOpen.bind(this)} \n            ref={Websocket => {\n              this.ws_swap = Websocket;\n            }}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}