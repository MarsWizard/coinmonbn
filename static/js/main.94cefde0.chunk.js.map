{"version":3,"sources":["compareView.js","App.js","reportWebVitals.js","index.js"],"names":["showContractCode","contract","contractCode","CompareView","props","state","nearContract","farContract","contractsDailySeries","nearContractDailySeries","futureWsClient","swapWsClient","console","log","setNearContract","bind","setFarContract","setContracts","nearContractCode","dataToEvents","this","setState","now","Date","sendQuery","Math","floor","period","start","end","wsClient","JSON","stringify","data","map","e","i","TimeEvent","id","m","rep","match","TimeSeries","name","columns","events","rawData","nearContractDailyChart","length","timeseries","width","timeRange","range","height","label","min","max","format","axis","series","Component","pako","require","precise","x","p","Number","parseFloat","toPrecision","App","prices","symbols","contractSuffixes","contracts","symbolContracts","symbol","currentSymbolContracts","push","count","future_contracts","contract_code","historyData","currentPair","openPrices","sendMessage","subscribe","updatePrice","sendMessageSwap","queryFutureKlineData","onClickMarketData","compareContracts","updateOpenPrice","peroid","from","to","postData","_this","arrayBuffer","then","compressedData","text","inflate","msg","parse","ping","pong","tick","ch","close","open","compareView","updateData","price","message","refWebSocket","Set","add","swap_contract_code","sub","ws_swap","req","newContract","dailyStartTime","daylyEndTime","url","onMessage","handleData","debug","onOpen","handleOpen","ref","Websocket","Object","keys","key","index","value","compareContract","onClick","toFixed","handleSwapReceive","handleSwapOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94cefde0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart } from \"react-timeseries-charts\";\r\nimport { TimeSeries, TimeRange, TimeEvent } from \"pondjs\";\r\n\r\nfunction showContractCode(contract){\r\n    if(contract == null){\r\n        return \"\";\r\n    }\r\n\r\n    return contract.contractCode;\r\n}\r\n\r\nclass CompareView extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nearContract: null,\r\n            farContract: null,\r\n            contractsDailySeries: {},\r\n            nearContractDailySeries: null,\r\n        }\r\n\r\n        this.futureWsClient = props.futureWsClient;\r\n        this.swapWsClient = props.swapWsClient;\r\n        console.log(props);\r\n\r\n        this.setNearContract = this.setNearContract.bind(this);\r\n        this.setFarContract = this.setFarContract.bind(this);\r\n        this.setContracts = this.setContracts.bind(this);\r\n        this.nearContractCode = this.nearContractCode.bind(this);\r\n        this.dataToEvents = this.dataToEvents.bind(this);\r\n\r\n    }\r\n\r\n    nearContractCode(){\r\n        var nearContract = this.state.nearContract;\r\n        if(nearContract == null){\r\n            return \"\";\r\n        }\r\n        return nearContract.contractCode;\r\n    }\r\n\r\n    setNearContract(contract){\r\n        console.log(contract);\r\n        this.setState({\r\n            nearContract: contract\r\n        })\r\n    }\r\n\r\n    setFarContract(contract){\r\n        console.log(contract);\r\n        this.setState({\r\n            farContract: contract\r\n        })\r\n    }\r\n\r\n    setContracts(nearContract, farContract){\r\n        this.setState({\r\n            nearContract, \r\n            farContract, \r\n        });\r\n\r\n        var now = Date.now();\r\n        console.log(this.futureWsClient);\r\n        this.sendQuery(nearContract.contractCode, '1day', \r\n            Math.floor(now/1000-3600*24), \r\n            Math.floor(now/1000), \r\n            this.futureWsClient);\r\n    }\r\n\r\n    sendQuery(contractCode, period, start, end, wsClient){\r\n        var postData = JSON.stringify({\r\n            \"req\": `market.${contractCode}.kline.${period}`,\r\n            \"id\": \"id4\",\r\n            \"from\": start,\r\n            \"to\": end, \r\n        });\r\n        // wsClient.sendMessage(postData);\r\n    }\r\n\r\n    dataToEvents(data){\r\n        return data.map((e,i)=>{\r\n            return new TimeEvent(new Date(e.id*1000), e);\r\n        });\r\n    }\r\n\r\n    updateData(data){\r\n        console.log(data);\r\n        var rep = data.rep;\r\n        var m = rep.match(/market\\.([\\w\\-_]+)\\.kline\\.1day/);\r\n        if(m!=null){\r\n            var contractCode = m[1];\r\n            var contractsDailySeries = this.state.contractsDailySeries;\r\n            contractsDailySeries[contractCode] = data.data;\r\n\r\n            var nearContractDailySeries = this.state.nearContractDailySeries;\r\n            if(this.state.nearContract != null && contractCode == this.state.nearContract.contractCode){\r\n                nearContractDailySeries = new TimeSeries({\r\n                    name: \"near contract daily price\", \r\n                    columns: ['time', 'close'], \r\n                    events: this.dataToEvents(data.data), \r\n                });\r\n            }\r\n\r\n            \r\n            this.setState({\r\n                contractsDailySeries, \r\n                nearContractDailySeries\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const rawData = this.state.contractsDailySeries[this.nearContractCode()];\r\n        let nearContractDailyChart = null;\r\n        if (rawData != null && rawData.length>0){\r\n            var timeseries = this.state.nearContractDailySeries;\r\n            nearContractDailyChart = <div>\r\n                <h2>{this.state.nearContract.contractCode} Close</h2>\r\n                <ChartContainer width={800} timeRange={timeseries.range()}>\r\n                    <ChartRow height=\"200\" >\r\n                        <YAxis\r\n                            id=\"price\"\r\n                            label=\"Price ($)\"\r\n                            min={0}\r\n                            max={timeseries.max(\"close\")}\r\n                            width=\"60\" format=\"$,.2f\"/>\r\n                        <Charts>\r\n                            <LineChart columns={[\"close\"]} axis=\"price\" series={timeseries}/>\r\n                        </Charts>\r\n                    </ChartRow>\r\n                </ChartContainer>\r\n            </div>\r\n        }\r\n        return <div>\r\n            <h2>{showContractCode(this.state.nearContract)} vs {showContractCode(this.state.farContract)}</h2>\r\n            {nearContractDailyChart}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CompareView;","import React, { Component } from 'react';\nimport Websocket from 'react-websocket';\nimport CompareView from './compareView';\nconst pako = require('pako');\n\nfunction precise(x, p=5) {\n  return Number.parseFloat(x).toPrecision(p);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    var prices = {};\n    var future_contracts = [{\n      contract_code: \"ETH_CW\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_NW\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_CQ\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"ETH_NQ\", \n      symbol: \"ETH\"\n    }, {\n      contract_code: \"BTC_CW\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_NW\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_CQ\", \n      symbol: \"BTC\"\n    }, {\n      contract_code: \"BTC_NQ\", \n      symbol: \"BTC\"\n    }];\n    var symbols = ['ETH', 'BTC'];\n    for(let symbol of symbols){\n      prices[symbol] = null;\n    }\n\n    var contractSuffixes = ['-USD', '_CW', '_NW', '_CQ', '_NQ'];\n    var contracts = [];\n    var symbolContracts = {};\n    for (let symbol of symbols){\n      var currentSymbolContracts = [];\n      for (let suffix of contractSuffixes){\n        var contract = {\n          contractCode: symbol + suffix, \n        };\n        contracts.push(contract);\n        currentSymbolContracts.push(contract);\n      }\n      symbolContracts[symbol] = currentSymbolContracts;\n    }\n\n\n    var historyData = {};\n    var currentPair = null;\n    var openPrices = {};\n    this.state = {\n      count: 90, \n      prices, \n      symbols, \n      future_contracts, \n      historyData, \n      currentPair,\n      contracts, \n      symbolContracts, \n      openPrices, \n    };\n\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.updatePrice = this.updatePrice.bind(this);\n    this.sendMessageSwap = this.sendMessageSwap.bind(this);\n    this.queryFutureKlineData = this.queryFutureKlineData.bind(this);\n    this.onClickMarketData = this.onClickMarketData.bind(this);\n    this.compareContracts = this.compareContracts.bind(this);\n    this.updateOpenPrice = this.updateOpenPrice.bind(this);\n  }\n\n  queryFutureKlineData(symbol, peroid, from, to){\n    var postData = JSON.stringify({\n        \"req\": `market.${symbol}.kline.${peroid}`,\n        \"id\": \"id4\",\n        \"from\": from,\n        \"to\": to, \n    })\n\n    this.sendMessage(postData);\n    this.sendMessageSwap(postData);\n  }\n\n  onClickMarketData(){\n    console.log('onClickMarketData');\n    this.queryFutureKlineData('ETH_CQ', '1min', 0, 1);\n  }\n\n  componentDidMount() {\n    for(let symbol of this.state.symbols){\n\n    }\n  }\n\n  handleData(data) {\n    var sendMessage = this.sendMessage;\n    var _this = this;\n    data.arrayBuffer().then(function(compressedData){\n      let text = pako.inflate(compressedData, {\n        to: 'string'\n      });\n      let msg = JSON.parse(text);\n      if (msg.ping) {\n        sendMessage(JSON.stringify({\n          pong: msg.ping\n        }));\n      } else if (msg.tick) {\n        var m = msg.ch.match(/market\\.([\\w_]+)\\.kline\\.(.*)/);\n        if(m){\n        var symbol = m[1];\n          // console.log(symbol);\n          _this.updatePrice(symbol, msg.tick.close);\n          if(m[2] == '1day'){\n            _this.updateOpenPrice(symbol, msg.tick.open);\n          }\n        }\n          // console.log(msg);\n          // handle(msg);\n      } \n      else if (msg.rep){\n        // var historyData = _this.state.historyData;\n        // historyData[msg.rep] = msg.data;\n        // _this.setState({'historyData': historyData});\n        if(_this.compareView != null){\n          _this.compareView.updateData(msg);\n        }\n        //console.log(msg);\n      }\n      else {\n          //console.log(text);\n      }\n    });\n  }\n\n  updatePrice(symbol, price){\n    var prices = this.state.prices;\n    prices[symbol] = price;\n    this.setState({prices});\n  }\n\n  subscribe(){\n    for (let symbol of this.state.symbols) {\n      for (let period of ['CW', 'NW', 'CQ', 'NQ']){\n        this.sendMessage(JSON.stringify({\n            \"sub\": `market.${symbol}_${period}.kline.1day`,\n            \"id\": `${symbol}_${period}`\n        }));\n      }\n    }\n  }\n\n  handleOpen(){\n    this.subscribe();\n  }\n\n  sendMessage(message){\n    this.refWebSocket.sendMessage(message);\n  }\n\n  handleSwapOpen(){\n    var symbols = new Set();\n    for(let contract of this.state.future_contracts){\n      symbols.add(contract.symbol);\n    }\n\n    for(let symbol of symbols){\n      var swap_contract_code = `${symbol}-USD`;\n      var sub = `market.${swap_contract_code}.kline.1day`;\n      this.sendMessageSwap(JSON.stringify({\n        sub: sub\n      }));\n    }\n  }\n\n  sendMessageSwap(message){\n    this.ws_swap.sendMessage(message);\n  }\n\n  updateOpenPrice(symbol, price){\n    var openPrices = this.state.openPrices;\n    openPrices[symbol] = price;\n    this.setState({openPrices});\n  }\n\n  handleSwapReceive(data){\n    var _this = this;\n    data.arrayBuffer().then(function(compressedData){\n      let text = pako.inflate(compressedData, {\n        to: 'string'\n      });\n      let msg = JSON.parse(text);\n      if (msg.ping) {\n        _this.sendMessageSwap(JSON.stringify({\n          pong: msg.ping\n        }));\n      } else if (msg.tick) {\n        var m = msg.ch.match(/market\\.(([\\w]+)\\-([\\w+]+))\\.kline\\.(.*)/);\n        if(m){\n          var symbol = m[2];\n          var contractCode = m[1];\n          //console.log(symbol);\n          if(m[4] == '1day'){\n            _this.updateOpenPrice(contractCode, msg.tick.open);\n          }\n          _this.updatePrice(symbol, msg.tick.close);\n          _this.updatePrice(contractCode, msg.tick.close);\n        }\n          //console.log(msg);\n          // handle(msg);\n      else if (msg.req){\n        _this.compareView.updateData(msg);\n      }\n      } else {\n          //console.log(text);\n      }\n    });\n  }\n\n  compareContracts(newContract, farContract){\n    console.log(newContract + ' vs ' + farContract);\n    // this.compareView.setNearContract(newContract);\n    // this.compareView.setFarContract(farContract);\n    this.compareView.setContracts(newContract, farContract);\n    var now = Date.now();\n    var dailyStartTime = Math.floor(now / 1000 - 3600 * 24 * 14);\n    var daylyEndTime = Math.floor(now / 1000);\n    this.queryFutureKlineData(newContract.contractCode, '1day', dailyStartTime, daylyEndTime);\n    this.queryFutureKlineData(farContract.contractCode, '1day', dailyStartTime, daylyEndTime);\n  }\n  \n  render() {\n    var symbols = this.state.symbols;\n    var future_contracts = this.state.future_contracts;\n    var symbolContracts = this.state.symbolContracts;\n    const refWebSocket = <Websocket url='wss://api.btcgateway.pro/ws'\n      onMessage={this.handleData.bind(this)} debug={true}\n      onOpen={this.handleOpen.bind(this)} \n      ref={Websocket => {\n        this.refWebSocket = Websocket;\n      }}/>\n    return (\n      <div>\n        {Object.keys(symbolContracts).map((key, index) => {\n          return <table symbol={key}>\n            <thead>\n              <tr>\n                <td></td>\n                <td></td>\n                {symbolContracts[key].map((value, index) => {\n                  return <td key={value.contractCode}>{value.contractCode}</td>\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {symbolContracts[key].map((value, index) => {\n                return <tr key={value.contract}>\n                  <td>{value.contractCode}</td>\n                  <td>\n                    {precise(this.state.prices[value.contractCode])}\n                    ({precise((this.state.prices[value.contractCode]/this.state.openPrices[value.contractCode]-1)*100, 3)}%)</td>\n                  {symbolContracts[key].map((compareContract, index) => {\n                    return <td onClick={() => this.compareContracts(value, compareContract)}>\n                      {(this.state.prices[value.contractCode] - this.state.prices[compareContract.contractCode]).toFixed(4)}\n                      ({(this.state.prices[value.contractCode] / this.state.prices[compareContract.contractCode]).toFixed(4)})\n                      \n                    </td>\n                  })}\n                </tr>\n              })}\n            </tbody>\n          </table>\n        })}\n        {refWebSocket}\n        <Websocket url='wss://api.btcgateway.pro/swap-ws'\n            onMessage={this.handleSwapReceive.bind(this)} debug={true}\n            onOpen={this.handleSwapOpen.bind(this)} \n            ref={Websocket => {\n              this.ws_swap = Websocket;\n            }}/>\n        <CompareView ref={compareView => this.compareView=compareView} \n          futureWsClient={refWebSocket} \n          swapWsClient={this.ws_swap} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}